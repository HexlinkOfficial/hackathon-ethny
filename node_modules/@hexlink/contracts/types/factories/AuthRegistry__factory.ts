/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AuthRegistry, AuthRegistryInterface } from "../AuthRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "validator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "MetadataUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getAuthMetadata",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "metadata",
        type: "string",
      },
    ],
    name: "setAuthMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608080604052346100165761045d908161001d8239f35b50600080fdfe6080604052600436101561001257600080fd5b6000803560e01c8063ec3da3eb146100615763ec5c1166146100345750600080fd5b3461005e575061005a61004e61004936610141565b610204565b60405191829182610171565b0390f35b80fd5b503461005e57602036600319011261005e576001600160401b036004358181116100f557366023820112156100f55780600401359182116100e8575b82604051916100b66020601f19601f8701160184610111565b83835236602485830101116100e257836100dd94602460209301838601378301015261030f565b604051f35b50915050fd5b6100f06100fa565b61009d565b505080fd5b50634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b0382119082101761013457604052565b61013c6100fa565b604052565b602090600319011261016b576004356001600160a01b0381168114156101645790565b5050600080fd5b50600080fd5b919091602080825283519081818401526000945b8286106101b25750508060409394116101a5575b601f01601f1916010190565b6000838284010152610199565b8581018201518487016040015294810194610185565b90600182811c921680156101fa575b60208310146101e257565b5050634e487b7160e01b600052602260045260246000fd5b91607f16916101d7565b6001600160a01b03166000908152602081815260408083209051815490938492909182610230826101c8565b8086529260019280841690811561029a575060011461025d575b5050505061025a92500382610111565b90565b815285812095935091905b81831061028257505061025a93508201013880808061024a565b85548784018501529485019486945091830191610268565b965050505050505060ff19169082015261025a81604081013880808061024a565b90601f81116102c957505050565b600091825260208220906020601f850160051c83019410610305575b601f0160051c01915b8281106102fa57505050565b8181556001016102ee565b90925082906102e5565b33600090815260208181526040822083519293926001600160401b03811161040c575b6103468161034084546101c8565b846102bb565b8083601f82116001146103a857869161039d575b508160011b916000199060031b1c19161790555b8151910120907f7d81f7140a88606ff947059266f01d842ecfe4eb057861602ca1d31b846bb9d83391604051a3565b90508401513861035a565b6000848152602090209150601f198316875b868282106103f657505090836001949392106103dd575b5050811b01905561036e565b86015160001960f88460031b161c1916905538806103d1565b600184958293958b0151815501940192016103ba565b6104146100fa565b61033256fea364697066735822122038bff0ff6fbd05e4a27bd43f2841ee25ef5b2be149b7ca186676b2db6bba2d9d6c6578706572696d656e74616cf564736f6c634300080c0041";

type AuthRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AuthRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AuthRegistry__factory extends ContractFactory {
  constructor(...args: AuthRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AuthRegistry";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AuthRegistry> {
    return super.deploy(overrides || {}) as Promise<AuthRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AuthRegistry {
    return super.attach(address) as AuthRegistry;
  }
  connect(signer: Signer): AuthRegistry__factory {
    return super.connect(signer) as AuthRegistry__factory;
  }
  static readonly contractName: "AuthRegistry";
  public readonly contractName: "AuthRegistry";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuthRegistryInterface {
    return new utils.Interface(_abi) as AuthRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AuthRegistry {
    return new Contract(address, _abi, signerOrProvider) as AuthRegistry;
  }
}
