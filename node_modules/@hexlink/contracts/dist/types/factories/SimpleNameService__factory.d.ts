import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SimpleNameService, SimpleNameServiceInterface } from "../SimpleNameService";
type SimpleNameServiceConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class SimpleNameService__factory extends ContractFactory {
    constructor(...args: SimpleNameServiceConstructorParams);
    deploy(validator: string, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<SimpleNameService>;
    getDeployTransaction(validator: string, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): SimpleNameService;
    connect(signer: Signer): SimpleNameService__factory;
    static readonly contractName: "SimpleNameService";
    readonly contractName: "SimpleNameService";
    static readonly bytecode = "0x60a0806040523461007457601f6101ae38819003918201601f19168301916001600160401b0383118484101761007a5780849260209460405283398101031261007457516001600160a01b038116811415610074576080526040516101199081610095823960805181818160490152608c0152f35b50600080fd5b50505050634e487b7160e01b600052604160045260246000fdfe60808060405260043610156014575b50600080fd5b600090813560e01c90816302571be314607457506317de2f1f14603557600e565b346071575060413660c8565b60405180606d7f00000000000000000000000000000000000000000000000000000000000000008260b5565b0390f35b80fd5b9190503460b057602036600319011260b0575080606d7f00000000000000000000000000000000000000000000000000000000000000008260b5565b809150fd5b6001600160a01b03909116815260200190565b6000906003190112600e5756fea36469706673582212202dcb95a76ee86b19c5e8b3a1aa1b8ce7ba1be2d6f39ded1b4b496708905a95a66c6578706572696d656e74616cf564736f6c634300080c0041";
    static readonly abi: ({
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        name?: undefined;
        outputs?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    })[];
    static createInterface(): SimpleNameServiceInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): SimpleNameService;
}
export {};
